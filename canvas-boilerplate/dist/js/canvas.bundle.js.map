{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/canvas.js","webpack:///./src/utils.js"],"names":["canvas","document","querySelector","c","getContext","width","innerWidth","height","innerHeight","mouse","x","y","colorArray1","colorArray2","colorArray3","neonColors","colors","addEventListener","event","clientX","clientY","init","rotate","velocity","angle","rotatedVelocities","Math","cos","sin","resolveCollision","particle","otherParticle","xVelocityDiff","yVelocityDiff","xDist","yDist","atan2","m1","mass","m2","u1","u2","v1","v2","vFinal1","vFinal2","Particle","radius","color","random","update","draw","i","particles","length","utils","getDistance","console","log","randomColor","Object","prototype","beginPath","arc","PI","fillStyle","strokeStyle","stroke","closePath","randomIntFromRange","j","push","animate","requestAnimationFrame","clearRect","forEach","min","max","floor","newColorArray","newColor","distance","x1","y1","x2","y2","sqrt","pow","xDistance","yDistance","module","exports"],"mappings":"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","file":"./js/canvas.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/canvas.js\");\n","import utils from './utils'\n\nconst canvas = document.querySelector('canvas')\nconst c = canvas.getContext('2d')\n\n//this sets the size of the canvas.  Can change the size if we need\n// canvas.width = body.height \n// canvas.height = body.height\ncanvas.width = innerWidth\ncanvas.height = innerHeight\n//Cirle spawn\nconst mouse = {\n    // x: 400,\n    // y: 400\n    x: innerWidth / 2,\n    y: innerHeight / 2\n}\n\n// const colors = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\n// const colors = ['#008080','#8D0E6B','#CCAD0A']\n// const colors = ['#008080','#00CCCC', '#2D9595', '#3DCCCC' , '#004D4D']\nconst colorArray1 = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\nconst colorArray2 = ['#008080','#8D0E6B','#CCAD0A']\nconst colorArray3 = ['#008080','#00CCCC', '#2D9595', '#3DCCCC' , '#004D4D']\nconst neonColors = ['#8BFF30', '#F7F702', '#f000ff', '#001eff', '#FF1493', '#1BFF14','#63E4F9','#F70109']\nconst colors = [neonColors]\n// let myColorArray\n//maybe add a few nested arrays and add onclick to do math.random to change to a random new index to change the whole colors\n// const colors = [['#008080','#00CCCC', '#2D9595', '#3DCCCC' , '#004D4D'],['#008080','#8D0E6B','#CCAD0A'],['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']]\n// const newColorArray = colors[Math.floor(Math.random() * colors.length)]\n// const newColor = newColorArray[Math.floor(Math.random() * newColorArray.length)]\n\n// Event Listeners\naddEventListener('mousemove', event => {\n    mouse.x = event.clientX\n    mouse.y = event.clientY\n})\n\naddEventListener('resize', () => {\n    canvas.width = innerWidth\n    canvas.height = innerHeight\n\n    init()\n})\n\n/**\n * Rotates coordinate system for velocities\n *\n * Takes velocities and alters them as if the coordinate system they're on was rotated\n *\n * @param  Object | velocity | The velocity of an individual particle\n * @param  Float  | angle    | The angle of collision between two objects in radians\n * @return Object | The altered x and y velocities after the coordinate system has been rotated\n */\n\nfunction rotate(velocity, angle) {\n    const rotatedVelocities = {\n        x: velocity.x * Math.cos(angle) - velocity.y * Math.sin(angle),\n        y: velocity.x * Math.sin(angle) + velocity.y * Math.cos(angle)\n    };\n\n    return rotatedVelocities;\n}\n\n/**\n * Swaps out two colliding particles' x and y velocities after running through\n * an elastic collision reaction equation\n *\n * @param  Object | particle      | A particle object with x and y coordinates, plus velocity\n * @param  Object | otherParticle | A particle object with x and y coordinates, plus velocity\n * @return Null | Does not return a value\n */\n\nfunction resolveCollision(particle, otherParticle) {\n    const xVelocityDiff = particle.velocity.x - otherParticle.velocity.x;\n    const yVelocityDiff = particle.velocity.y - otherParticle.velocity.y;\n\n    const xDist = otherParticle.x - particle.x;\n    const yDist = otherParticle.y - particle.y;\n\n    // Prevent accidental overlap of particles\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist >= 0) {\n\n        // Grab angle between the two colliding particles\n        const angle = -Math.atan2(otherParticle.y - particle.y, otherParticle.x - particle.x);\n\n        // Store mass in var for better readability in collision equation\n        const m1 = particle.mass;\n        const m2 = otherParticle.mass;\n\n        // Velocity before equation\n        const u1 = rotate(particle.velocity, angle);\n        const u2 = rotate(otherParticle.velocity, angle);\n\n        // Velocity after 1d collision equation //wikipedia - Elastic Collision equation\n        const v1 = { x: u1.x * (m1 - m2) / (m1 + m2) + u2.x * 2 * m2 / (m1 + m2), y: u1.y };\n        const v2 = { x: u2.x * (m1 - m2) / (m1 + m2) + u1.x * 2 * m2 / (m1 + m2), y: u2.y };\n\n        // Final velocity after rotating axis back to original location\n        const vFinal1 = rotate(v1, -angle);\n        const vFinal2 = rotate(v2, -angle);\n\n        // Swap particle velocities for realistic bounce effect\n        particle.velocity.x = vFinal1.x;\n        particle.velocity.y = vFinal1.y;\n\n        otherParticle.velocity.x = vFinal2.x;\n        otherParticle.velocity.y = vFinal2.y;\n    }\n}\n\n// Objects\nfunction Particle(x, y, radius, color) {\n    this.x = x\n    this.y = y\n    //gives movement to each particle created\n    this.velocity = {\n        x: (Math.random() -0.5) *2,\n        y: (Math.random() -0.5) *2\n    }\n    this.radius = radius\n    this.color = color\n    this.mass = 1\n\n    this.update = particles => {\n        this.draw()\n        for (let i = 0; i < particles.length; i++){\n            // console.log(particles)\n            // console.log('before collision detection')\n            if (this === particles[i]) continue;\n            if (utils.getDistance(this.x, this.y, particles[i].x, particles[i].y) - this.radius * 2 < 0){\n                console.log('has collided')\n                resolveCollision(this, particles[i])\n                this.color = utils.randomColor(colors) // hehe hehe\n                // this.color = utils.randomColor(Math.floor.Math.random())\n            }\n        }\n        //keeps particles on screen\n        if (this.x - this.radius <= 0 || this.x + this.radius >= canvas.width){\n            this.velocity.x = -this.velocity.x;\n        }\n        if (this.y - this.radius <= 0 || this.y + this.radius >= canvas.height){\n            this.velocity.y = -this.velocity.y;\n        }\n\n        //mouse collision detection\n        if (utils.getDistance(mouse.x, mouse.y, this.x, this.y) < 30){\n            console.log('HEEEEEEEE')\n        }\n\n        //gives velocity\n        this.x += this.velocity.x; \n        this.y += this.velocity.y; \n        \n    }   \n}\n\nObject.prototype.draw = function() {\n    c.beginPath()\n    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false)\n    c.fillStyle = this.color\n    c.strokeStyle = this.color;\n    // c.fill()\n    c.stroke()\n    c.closePath()\n}\n\nObject.prototype.update = () => {\n    this.draw()\n}\n\n// Implementation\nlet particles\nfunction init() {\n    particles = []\n   \n    for (let i = 0; i < 140; i++) {\n        const radius = 10;\n        //spawns inside the canvas\n        let x = utils.randomIntFromRange(radius, canvas.width - radius)\n        let y = utils.randomIntFromRange(radius, canvas.height -radius)\n        const color = utils.randomColor(colors);\n\n        if (i !== 0) {\n            for (let j = 0; j < particles.length; j++){\n                if (utils.getDistance(x, y, particles[j].x, particles[j].y) - radius * 2 < 0){\n                    //makes sure the respawn is inside the canvas\n                    x = utils.randomIntFromRange(radius, canvas.width - radius) ;y = utils.randomIntFromRange(radius, canvas.height -radius)\n                     j = -1\n                }\n            }\n        }\n\n        particles.push(new Particle(x, y, radius, color))\n    }\n    console.log(particles)\n}\n\n// Animation Loop\nfunction animate() {\n    requestAnimationFrame(animate)\n    c.clearRect(0, 0, canvas.width, canvas.height)\n\n    particles.forEach(particle => {\n        particle.update(particles);\n        // console.log('has been updated')\n        // console.log(particles)\n        \n    });\n}\n\ninit()\nanimate()","function randomIntFromRange(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n// let myColorArray\nfunction randomColor(colors) {\n    // return newColor[Math.floor(Math.random() * colors.length)]\n    // let newColorArray = randomColorArray()\n    let newColorArray = colors[Math.floor(Math.random() * colors.length)]\n    let newColor = newColorArray[Math.floor(Math.random() * newColorArray.length)]\n    return newColor\n    // return newColor\n}\n\n// let myColorArray\n// const randomColorArray = (myColorArray, colors) => {\n//     return myColorArray = colors[Math.floor(Math.random() * colors.length)]\n\n// }\n// const colorArray1 = ['#2185C5', '#7ECEFD', '#FFF6E5', '#FF7F66']\n// const colorArray2 = ['#008080','#8D0E6B','#CCAD0A']\n// const colorArray3 = ['#008080','#00CCCC', '#2D9595', '#3DCCCC' , '#004D4D']\n// const colors = [colorArray1, colorArray2, colorArray3]\n\n\n\nfunction distance(x1, y1, x2, y2) {\n    const xDist = x2 - x1\n    const yDist = y2 - y1\n\n    return Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2))\n}\n\nfunction getDistance(x1, y1, x2, y2){\n    let xDistance = x2 - x1;\n    let yDistance = y2- y1;\n\n    return Math.sqrt(Math.pow(xDistance, 2) + Math.pow(yDistance, 2))\n}\n\n\nmodule.exports = { randomIntFromRange, distance, getDistance, randomColor}\n"],"sourceRoot":""}